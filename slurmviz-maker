#!/bin/bash -e

# hacky
source /wang/environment/software/Modules/current/init/bash

# load module containing gcc/linker etc explictly
module load spack_visionary-defaults/2017-12-01

SOURCE=$PWD
test -f "${SOURCE}/slurmviz-maker" || exit 1
test -f "${SOURCE}/AUTHORS" || exit 1

test -n "$1" || { echo "ERR: Please specify command (prep, build, install, package, manual or all)."; exit 1; }

INSTALL_PREFIX="/usr/local"
CONFIG_OPTS="--prefix ${INSTALL_PREFIX} --sysconfdir /etc/slurm --enable-pam --with-hdf5=no"
HWDB_MODULE="hwdb4slurm/0.2"

set -o xtrace


cmd_manual() {
cat <<EOF
  #automake
  chmod u+x configure
  module load ${HWDB_MODULE}
  ./configure ${CONFIG_OPTS}
  make
  sudo make install
EOF
}

cmd_prep() {
  test $UID -eq 0 && { echo "You must NOT be root"; exit 1; }

  # test software or apt-get install all of them:
  #   libcr-dev
  #   libhwloc-dev
  #   man2html
  #   libmunge-dev
  #   libmysql++-dev
  #   libssl-dev
  #   libpam0g-dev
  #   libreadline-dev
  #   libncurses5-dev
  #   libglib2.0-dev
  #   libjson0-dev
  #   libgtk2.0-dev
  #   libcurl4-gnutls-dev

  pushd ${SOURCE}
    #automake
    chmod u+x configure
  popd
}

cmd_build() {
  test $UID -eq 0 && { echo "You must NOT be root"; exit 1; }

  # TODO change this, we want to explicitly load the paths needed to build, and
  # state those we need to run it
  module load ${HWDB_MODULE}

  pushd ${SOURCE}
    ./configure ${CONFIG_OPTS}
    make
  popd
}

systemd_slurm() {
  if [ "x$1" = "xtest" ]
  then
    pgrep slurmd && return 1
    pgrep slurmctld && return 1
    pgrep slurmdbd && return 1
    return 0
  fi
}


cmd_install() {
  systemd_slurm test || { echo -e "Stop slurm prior running this:\n\tsudo systemctl stop slurmdbd slurmd slurmctld"; exit 1; }

  test $UID -eq 0 || { echo "You must be root"; exit 1; }

  rm -f slurmfiles.lst
  INSTALL_WAFER_RES_OPTS=${INSTALL_PREFIX}/lib/slurm/wafer_res_opts.so
  INSTALL_HAGEN_DAAS_OPTS=${INSTALL_PREFIX}/lib/slurm/hagen_daas_opts.so
  pushd ${SOURCE}
    make uninstall
    rm ${INSTALL_WAFER_RES_OPTS} || true
    rm ${INSTALL_HAGEN_DAAS_OPTS} || true
    find ${INSTALL_PREFIX} -type f ! -path ${INSTALL_PREFIX}'/src/*' | sort > /tmp/slurmfiles-uninstall

    make install
    pushd spank_plugins
      gcc -shared -fPIC -o ${INSTALL_WAFER_RES_OPTS} wafer_res_opts.c
      gcc -shared -fPIC -o ${INSTALL_HAGEN_DAAS_OPTS} hagen_daas_opts.c
    popd
    find ${INSTALL_PREFIX} -type f ! -path ${INSTALL_PREFIX}'/src/*' | sort > /tmp/slurmfiles-install
  popd

  comm -13 /tmp/slurmfiles-uninstall /tmp/slurmfiles-install > slurmfiles.lst
}

cmd_package() {
  test $UID -eq 0 || { echo "You must be root"; exit 1; }
  PACKAGE="slurm-$(date +%F).tgz"
  test -e $PACKAGE && PACKAGE="slurm-$(date +%F_%s).tgz"
  tar -vcaf "${PACKAGE}" -T "slurmfiles.lst"
}

cmd_testlib() {
  # test for some files to check if stuff was compiled correctly:
  set errexit
  test -f ${INSTALL_PREFIX}/lib/slurm/jobcomp_elasticsearch.so
  test -f ${INSTALL_PREFIX}/lib/slurm/job_submit_nmpm_custom_resource.so
  test -f ${INSTALL_PREFIX}/lib/slurm/hagen_daas.so
  echo "basic tests passed"
}

cmd_all() {
  systemd_slurm test || { echo -e "Stop slurm prior running this:\n\tsudo systemctl stop slurmdbd slurmd slurmctld"; exit 1; }

  test $UID -eq 0 || { echo "You must be root"; exit 1; }
  SOURCE_OWNER=$(stat -c '%U' $0)
  test "$SOURCE_OWNER" != "root" || echo "$0 should not be owned by root"

  sudo -u $SOURCE_OWNER bash -l -c "cd $SOURCE; ./slurmviz-maker prep"
  sudo -u $SOURCE_OWNER bash -l -c "cd $SOURCE; ./slurmviz-maker build"
  cmd_install
  cmd_package

  cmd_testlib
  systemctl start slurmdbd slurmctld slurmd
  sleep 3
  systemctl start slurmdbd      || { echo "slurmidbd failed to start!"; exit 1; }
  systemctl status slurmctld    || { echo "slurmctld failed to start!"; exit 1; }
  systemctl status slurmd       || { echo "slurmd failed to start!"; exit 1; }

  set +x
  echo "Looks like the new slurm is running nicely?"
  echo "  * scp ${PACKAGE} andvari:/srv/salt/env_prod/slurm/"
  echo "  * ssh andvari -- ln -sf ${PACKAGE} /srv/salt/env_prod/slurm/slurm-current.tgz"
  echo "  * ssh -t Sto -- chroot /srv/nfs4/cluster.d/skessie \# salt-call state.highstate test=True"
  echo "  * sudo salt-call state.highstate test=True \# @ hel and beli (on build host its optional"
  echo
  echo "All done, have fun!"
}

cmd_$1

# TODO
# Type ldconfig -n <library_location> so that the Slurm libraries can be found by applications that
# intend to use Slurm APIs directly. The library location will be a subdirectory of PREFIX (described
# below) and depend upon the system type and configuration, typically lib, lib64 and/or lib32. For
# example, if PREFIX is "/usr" and the subdirectory is "lib64" then you would find that a file named
# "/usr/lib64/libslurm.so" was installed and the command "ldconfig -n /usr/lib64" should be executed.

